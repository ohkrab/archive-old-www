[{"id":0,"href":"/docs/get_started/overview/","title":"Overview","section":"Get Started","content":"TODO\n"},{"id":1,"href":"/docs/commands/version/","title":"Version","section":"Commands","content":"Krab version The version command prints the version of Krab.\nUsage krab version Example $ krab version krab 0.2.4 Build a2aa572cd37e64c38f16925c1152a2bed1fc4c0a 2021-07-04 "},{"id":2,"href":"/docs/configuration/environment_variables/","title":"Environment Variables","section":"Configuration","content":"Environment variables  KRAB_DIR - directory to load configuration from (default: current working directory) DATABASE_URL - PostgreSQL connection url  "},{"id":3,"href":"/docs/configuration/migration/","title":"Migration","section":"Configuration","content":"Migration Migration resource is a single migrate operation.\nmigration \u0026#34;\u0026lt;reference\u0026gt;\u0026#34; { version = \u0026#34;\u0026lt;version\u0026gt;\u0026#34; up { sql = \u0026#34;...\u0026#34; } down { sql = \u0026#34;...\u0026#34; } }  \u0026lt;reference\u0026gt; - is a migration reference name to use when connecting to other resources \u0026lt;version\u0026gt; - name that will be used to identify migration in the database, if not specified is equal to the reference up / down - migration direction, contains SQL code to be executed  Example migration \u0026#34;create_tenants\u0026#34; { version = \u0026#34;20060102150405\u0026#34; up { sql = \u0026#34;CREATE TABLE tenants(name VARCHAR PRIMARY KEY)\u0026#34; } down { sql = \u0026#34;DROP TABLE tenants\u0026#34; } } "},{"id":4,"href":"/docs/configuration/migration_set/","title":"Migration Set","section":"Configuration","content":"Migration Set Migration Set is a collection of migrations.\nmigration_set \u0026#34;\u0026lt;reference\u0026gt;\u0026#34; { migrations = [ ... ] }  \u0026lt;reference\u0026gt; - migration set reference name migrations - list of migrations references  Example migration_set \u0026#34;private\u0026#34; { migrations = [ migration.create_tenants ] } migration \u0026#34;create_tenants\u0026#34; { version = \u0026#34;20200628\u0026#34; up { sql = \u0026#34;CREATE TABLE tenants(name varchar PRIMARY KEY)\u0026#34; } down { sql = \u0026#34;DROP TABLE tenants\u0026#34; } } "},{"id":5,"href":"/docs/functions/filesystem/","title":"Filesystem","section":"Functions","content":"Filesystem Functions that can be used in krab configuration files.\nfile_read file_read reads a file at the given path and returns its content as a string.\nsql = file_read(\u0026#34;path\u0026#34;) "},{"id":6,"href":"/docs/get_started/installation/","title":"Installation","section":"Get Started","content":"Installation Krab binary can be downloaded from GitHub. Other methods are listed below.\nasdf Krab provides asdf plugin:\nasdf plugin add krab https://github.com/ohkrab/asdf-krab.git # or asdf plugin add krab git@github.com:ohkrab/asdf-krab.git Install desired version:\nasdf install krab 0.2.4 Set it to your project:\nasdf local krab 0.2.4 docker To start a docker container DATABASE_URL environment variable must be provided. By default \u0026ldquo;krab\u0026rdquo; reads configuration from /etc/krab that must be mounted as a volume, the path can be changed by KRAB_DIR environment variable.\nPull the docker image:\ndocker pull qbart/krab:latest Example:\ndocker run --rm \\  -e DATABASE_URL=\u0026#34;...\u0026#34; \\  -v ${HOME}/project1:/etc/krab:ro \\  qbart/krab:latest version "},{"id":7,"href":"/docs/commands/migrate/down/","title":"down","section":"Migrate","content":"Migrate down The migrate down command rollbacks selected migration.\nAfter successful operation its version is removed from migration table. At the beginning of an operation advisory lock is acquired to prevent other operations to run simultaneously.\nUsage krab migrate down [set] [version] Options  set - name of the set to migrate. version - migration version to rollback.  Example For default migration set and migration version 20060102150405 you would use:\nkrab migrate down default 20060102150405 "},{"id":8,"href":"/docs/commands/migrate/up/","title":"up","section":"Migrate","content":"Migrate up The migrate up command migrates all pending migration for a given migration set.\nAfter successful migration its version is put into database migration table (by default schema_migrations). When migration table does not exist it will be created. At the beginning of an operation advisory lock is acquired to prevent other migrations to run simultaneously.\nðŸ’¡ Migrations are executed in the order defined by migration set NOT lexicographically.  Usage krab migrate up [set] Options  set - name of the set to migrate.  Example For default migration set you would use:\nkrab migrate up default "}]